use warnings;
use strict;

print "MESSAGE: This script is to calcualte odds ratio of variants based on parameter estimates from LMM generated by raremetalworker4.13.4 or rvtests.\n";
print "\t--Shuang Feng, September 10, 2014\n\n";
print "USAGE: perl calculateOR.pl [INFILE] [OUTFILE] [TOOLNAME]\n\n";
print "[INFILE] is the summary statistics file generated by raremetalworker or rvtests.\n";
print "[OUTFILE] is the file name of output file with calculated ORs saved.\n";
print "[TOOLNAME] is either rvtests or rmw\n";
print "\nAn example command:\n perl calculateOR.pl LDL.singlevar.score.txt.gz LDL.singlevar.score.OR.txt.gz rmw \n\n";

my $input = $ARGV[0];
my $output = $ARGV[1];
my $tool = $ARGV[2];
if($tool ne "rvtests" && $tool ne "rmw")
{
   die "FATAL ERROR: tool can only be rmw or rvtests.\n";
}

die "FATAL ERROR: Number of arguments must be 3!\n" if ($#ARGV!=2);

my $cmd;

#detect file format 
my $tail = substr($input,length($input)-3,3);

if($tail eq ".gz")
{
   $cmd = "echo 'compressed input file has been detected.' > calculate.OR.log";
   print `$cmd`;
   $cmd = "zgrep Intercept $input | awk '{print \$4}'";
   my $mu = `$cmd`;
   $cmd = "echo 'Intercept is $mu.' >> calculate.OR.log";
   print `$cmd`;

   my $factor = 1.0/$mu/(1.0-$mu);

   $cmd = "echo 'Factor is $factor' >> calculate.OR.log";
   print `$cmd`;

   if($tool eq "rvtests")
   {
      $cmd = "zgrep -v -E  '^#|^CHR' $input | awk '{if(\$15!=\"NA\") print \$0\"\t\"exp(\$15*$factor); else print \$0\"\tNA\"}' > $output.intermediate";
      print `$cmd`;
      $cmd = "zgrep -E '^#|^CHR' $input | awk '{if(\$1~/CHR/) print \$0\"\tOddsRatio\"; else print \$0}' > $output.header";
      print `$cmd`;
   }
   else
   {
      $cmd = "zgrep -v -E '^#|^CHR' $input | awk '{if(\$16!=\"NA\") print \$0\"\t\"exp(\$16*$factor); else print \$0\"\tNA\"}' > $output.intermediate";
      print `$cmd`;
      $cmd = "zgrep -E '^#|^CHR' $input | awk '{if(\$1~/CHR/) print \$0\"\tOddsRatio\"; else print \$0}' > $output.header";
      print `$cmd`;
   }
   $cmd = "cat $output.header $output.intermediate | bgzip > $output.gz";
   print `$cmd`;
   print "Odds ratios have been saved in $output.gz.\n";
}
else
{
   $cmd = "echo 'compressed input file has been detected.' > calculate.OR.log";
   print `$cmd`;
   $cmd = "grep Intercept $input | awk '{print \$4}'";
   my $mu = `$cmd`;
   $cmd = "echo 'Intercept is $mu' >> calculate.OR.log";
   print `$cmd`;

   my $factor = 1.0/$mu/(1.0-$mu);

   $cmd = "echo 'Factor is $factor' >> calculate.OR.log";
   print `$cmd`;

   if($tool eq "rvtests")
   {
      $cmd = "grep -v -E  '^#|^CHR' $input | awk '{if(\$15!=\"NA\") print \$0\"\t\"exp(\$15*$factor); else print \$0\"\tNA\"}' > $output.intermediate";
      print `$cmd`;
      $cmd = "grep -E '^#|^CHR' $input | awk '{if(\$1~/CHR/) print \$0\"\tOddsRatio\"; else print \$0}' > $output.header";
      print `$cmd`;
   }
   else
   {
      $cmd = "grep -v -E '^#|^CHR' $input | awk '{if(\$16!=\"NA\") print \$0\"\t\"exp(\$16*$factor); else print \$0\"\tNA\"}' > $output.intermediate";
      print `$cmd`;
      $cmd = "grep -E '^#|^CHR' $input | awk '{if(\$1~/CHR/) print \$0\"\tOddsRatio\"; else print \$0}' > $output.header";
      print `$cmd`;
   }
   $cmd = "cat $output.header $output.intermediate > $output";
   print `$cmd`;
   print "Odds ratios have been saved in $output.\n";
}

$cmd = "rm $output.intermediate $output.header";
print `$cmd`;

$cmd = "echo 'success' >> calculate.OR.log";
print `$cmd`;
